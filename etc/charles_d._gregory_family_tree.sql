PRAGMA foreign_keys=OFF;
BEGIN TRANSACTION;
CREATE TABLE IF NOT EXISTS "assertion" (assertion_id INTEGER PRIMARY KEY, citation_id INTEGER NOT NULL, finding_id INTEGER, event_type_id INTEGER, date TEXT NOT NULL DEFAULT '-0000-00-00-------', nested_place_id INTEGER, particulars TEXT NOT NULL DEFAULT '', age TEXT NOT NULL DEFAULT '', name_id INTEGER, surety FLOAT DEFAULT 3.0, FOREIGN KEY (citation_id) REFERENCES citation (citation_id), FOREIGN KEY (finding_id) REFERENCES finding (finding_id), FOREIGN KEY (nested_place_id) REFERENCES nested_place (nested_place_id), FOREIGN KEY (name_id) REFERENCES name (name_id));
INSERT INTO assertion VALUES(1,1,NULL,9,'-0000-00-00-------',1,'Toy','',1,3.0);
INSERT INTO assertion VALUES(9,1,NULL,9,'bef-1933-09-26-------',1,'','',1,3.0);
CREATE TABLE IF NOT EXISTS "citation" (citation_id INTEGER PRIMARY KEY, source_id INTEGER NOT NULL, citations TEXT, FOREIGN KEY (source_id) REFERENCES source (source_id));
INSERT INTO citation VALUES(1,1,'Design Patent 91191, filed Sept. 26, 1933, granted Dec. 19, 1933');
INSERT INTO citation VALUES(2,1,'U.S. Patent 1959469, filed December 19, 1933, granted May 22, 1934');
INSERT INTO citation VALUES(3,2,'South Plains Man Perfects Revolutionary Motor, August 2, 1936, page seven');
CREATE TABLE IF NOT EXISTS "contact" (contact_id INTEGER PRIMARY KEY, contact_name TEXT NOT NULL DEFAULT '', position TEXT NOT NULL DEFAULT '', company TEXT NOT NULL DEFAULT '', email TEXT NOT NULL default '', address TEXT NOT NULL DEFAULT '', phone TEXT NOT NULL DEFAULT '', cell TEXT NOT NULL DEFAULT '', website TEXT NOT NULL DEFAULT '', blog TEXT NOT NULL DEFAULT '', forum TEXT NOT NULL DEFAULT '', forum_handle TEXT NOT NULL DEFAULT '', ancestry_handle TEXT NOT NULL DEFAULT '', familysearch_handle TEXT NOT NULL DEFAULT '', findagrave_handle TEXT NOT NULL DEFAULT '', repository_id INTEGER, note_id INTEGER, dogs_name TEXT NOT NULL DEFAULT '', FOREIGN KEY (note_id) REFERENCES note (note_id), FOREIGN KEY (repository_id) REFERENCES repository (repository_id));
CREATE TABLE IF NOT EXISTS "current" (current_id INTEGER PRIMARY KEY, place_id INTEGER, person_id INTEGER, citation_id INTEGER REFERENCES citation (citation_id), color_scheme_id INTEGER DEFAULT null, FOREIGN KEY (person_id) REFERENCES person (person_id));
INSERT INTO "current" VALUES(1,1,1,NULL,1);
CREATE TABLE IF NOT EXISTS "date_change" (date_change_id INTEGER PRIMARY KEY, date_changes TEXT NOT NULL, time_changes TEXT DEFAULT '', person_id INTEGER, source_id INTEGER, citation_id INTEGER, place_id INTEGER, note_id INTEGER, family_pointer TEXT DEFAULT null, FOREIGN KEY (person_id) REFERENCES person (person_id), FOREIGN KEY (source_id) REFERENCES source (source_id), FOREIGN KEY (note_id) REFERENCES note (note_id), FOREIGN KEY (citation_id) REFERENCES citation (citation_id));
CREATE TABLE IF NOT EXISTS "date_format" (date_format_id INTEGER PRIMARY KEY, date_formats TEXT NOT NULL DEFAULT 'alpha_dmy', abt TEXT NOT NULL DEFAULT 'abt', est TEXT NOT NULL DEFAULT 'est', cal TEXT NOT NULL DEFAULT 'calc', bef_aft TEXT NOT NULL DEFAULT 'bef/aft', bc_ad TEXT NOT NULL DEFAULT 'BCE/CE', os_ns TEXT NOT NULL DEFAULT 'OS/NS', span TEXT NOT NULL DEFAULT 'from_to', range TEXT NOT NULL DEFAULT 'btwn_&');
INSERT INTO date_format VALUES(1,'dmy','abt','est','cal','bef/aft','BCE/CE','OS/NS','from_to','btwn_&');
CREATE TABLE IF NOT EXISTS "finding" (finding_id INTEGER PRIMARY KEY, date TEXT NOT NULL DEFAULT '-0000-00-00-------', particulars TEXT NOT NULL DEFAULT '', age TEXT NOT NULL DEFAULT '', person_id INTEGER DEFAULT null, event_type_id INTEGER NOT NULL, date_sorter TEXT NOT NULL DEFAULT '0,0,0', age1 TEXT NOT NULL DEFAULT '', kin_type_id1 INTEGER, age2 TEXT NOT NULL DEFAULT '', kin_type_id2 INTEGER, person_id1 INTEGER DEFAULT null, person_id2 INTEGER DEFAULT null, nested_place_id INTEGER NOT NULL DEFAULT 1, FOREIGN KEY (person_id) REFERENCES person (person_id), FOREIGN KEY (person_id1) REFERENCES person (person_id), FOREIGN KEY (person_id2) REFERENCES person (person_id), FOREIGN KEY (nested_place_id) REFERENCES nested_place (nested_place_id));
INSERT INTO finding VALUES(1,'-0000-00-00-------','','',1,1,'0,0,0','',NULL,'',NULL,NULL,NULL,1);
INSERT INTO finding VALUES(3,'bef-1933-s-26-------','','',1,9,'1933,9,26','',NULL,'',NULL,NULL,NULL,1);
CREATE TABLE IF NOT EXISTS "format" (format_id INTEGER PRIMARY KEY, output_font TEXT, input_font TEXT, font_size INTEGER, default_output_font TEXT NOT NULL DEFAULT 'courier', default_input_font TEXT NOT NULL DEFAULT 'dejavu sans mono', default_font_size INTEGER NOT NULL DEFAULT 12);
INSERT INTO format VALUES(1,'corbel new','dejavu sans mono',12,'Courier','dejavu sans mono',12);
CREATE TABLE IF NOT EXISTS "media" (media_id INTEGER PRIMARY KEY, media_name TEXT DEFAULT '', media_type INTEGER);
CREATE TABLE IF NOT EXISTS "name" (name_id INTEGER PRIMARY KEY, person_id INTEGER NOT NULL, names TEXT NOT NULL, name_type_id INTEGER NOT NULL DEFAULT 18, sort_order TEXT NOT NULL, used_by TEXT NOT NULL DEFAULT '', FOREIGN KEY (person_id) REFERENCES person (person_id));
INSERT INTO name VALUES(1,1,'Charles D. Gregory',2,'Gregory Charles D.','');
CREATE TABLE IF NOT EXISTS "nested_place" (nested_place_id INTEGER PRIMARY KEY AUTOINCREMENT, nest0 INTEGER NOT NULL DEFAULT 1, nest1 INTEGER NOT NULL DEFAULT 1, nest2 INTEGER NOT NULL DEFAULT 1, nest3 INTEGER NOT NULL DEFAULT 1, nest4 INTEGER NOT NULL DEFAULT 1, nest5 INTEGER NOT NULL DEFAULT 1, nest6 INTEGER NOT NULL DEFAULT 1, nest7 INTEGER NOT NULL DEFAULT 1, nest8 INTEGER NOT NULL DEFAULT 1, FOREIGN KEY (nest0) REFERENCES place (place_id), FOREIGN KEY (nest1) REFERENCES place (place_id), FOREIGN KEY (nest2) REFERENCES place (place_id), FOREIGN KEY (nest3) REFERENCES place (place_id), FOREIGN KEY (nest4) REFERENCES place (place_id), FOREIGN KEY (nest5) REFERENCES place (place_id), FOREIGN KEY (nest6) REFERENCES place (place_id), FOREIGN KEY (nest7) REFERENCES place (place_id), FOREIGN KEY (nest8) REFERENCES place (place_id), UNIQUE (nest0, nest1, nest2, nest3, nest4, nest5, nest6, nest7, nest8));
INSERT INTO nested_place VALUES(1,1,1,1,1,1,1,1,1,1);
CREATE TABLE IF NOT EXISTS "note" (note_id INTEGER PRIMARY KEY, notes TEXT NOT NULL DEFAULT '', private BOOLEAN NOT NULL DEFAULT 0, topic TEXT NOT NULL UNIQUE DEFAULT 'Note 1');
CREATE TABLE person (person_id INTEGER PRIMARY KEY, gender TEXT NOT NULL DEFAULT 'unknown');
INSERT INTO person VALUES(1,'unknown');
CREATE TABLE IF NOT EXISTS "place" (place_id INTEGER PRIMARY KEY, latitude TEXT DEFAULT '', longitude TEXT DEFAULT '', cartesian_coordinates TEXT DEFAULT '', township TEXT DEFAULT '', range TEXT DEFAULT '', section TEXT DEFAULT '', legal_subdivision TEXT DEFAULT '', hint TEXT UNIQUE DEFAULT null);
INSERT INTO place VALUES(1,'','','','','','','',NULL);
CREATE TABLE place_name (place_name_id INTEGER PRIMARY KEY, place_names TEXT NOT NULL, place_id INTEGER REFERENCES place (place_id), main_place_name BOOLEAN NOT NULL DEFAULT 0);
INSERT INTO place_name VALUES(1,'unknown',1,1);
CREATE TABLE project (project_id INTEGER PRIMARY KEY, projects TEXT NOT NULL DEFAULT '', project_summary TEXT);
CREATE TABLE IF NOT EXISTS "report" (report_id INTEGER PRIMARY KEY, report_name TEXT NOT NULL DEFAULT '', report_type INTEGER);
CREATE TABLE IF NOT EXISTS "repository" (repository_id INTEGER PRIMARY KEY, repository_name TEXT NOT NULL DEFAULT '', repository_type TEXT DEFAULT '');
CREATE TABLE IF NOT EXISTS "setting" (setting_id INTEGER PRIMARY KEY, image_male_id INTEGER, image_female_id INTEGER, image_unisex_id INTEGER, image_source_id INTEGER, image_place_id INTEGER, default_image_male_id INTEGER NOT NULL DEFAULT 17, default_image_female_id INTEGER NOT NULL DEFAULT 15, default_image_unisex_id INTEGER NOT NULL DEFAULT 14, default_image_source_id INTEGER NOT NULL DEFAULT 18, default_image_place_id INTEGER NOT NULL DEFAULT 19, FOREIGN KEY (image_male_id) REFERENCES image (image_id), FOREIGN KEY (image_female_id) REFERENCES image (image_id), FOREIGN KEY (image_unisex_id) REFERENCES image (image_id), FOREIGN KEY (image_source_id) REFERENCES image (image_id), FOREIGN KEY (image_place_id) REFERENCES image (image_id));
INSERT INTO setting VALUES(1,NULL,NULL,NULL,NULL,NULL,1,2,3,5,4);
CREATE TABLE IF NOT EXISTS "source" (source_id INTEGER PRIMARY KEY, sources TEXT NOT NULL, source_type TEXT DEFAULT '');
INSERT INTO source VALUES(1,'U.S. Patent','');
INSERT INTO source VALUES(2,'Amarillo News and Globe','');
CREATE TABLE to_do (to_do_id INTEGER PRIMARY KEY, to_dos TEXT NOT NULL DEFAULT '', priority INTEGER);
CREATE TABLE IF NOT EXISTS "image" (image_id INTEGER PRIMARY KEY, images TEXT UNIQUE NOT NULL, caption TEXT);
INSERT INTO image VALUES(1,'0_default_image_male.gif','Add a photo--how about a vintage photo of where this person lived?');
INSERT INTO image VALUES(2,'0_default_image_female.jpg','Add a photo--how about a vintage photo of where this person lived?');
INSERT INTO image VALUES(3,'0_default_image_unisex.jpg','Add a photo--how about a vintage photo of where this person lived?');
INSERT INTO image VALUES(4,'0_default_image_place.jpg','Add a photo--how about a vintage photo of this place?');
INSERT INTO image VALUES(5,'0_default_image_source.jpg','Add a photo or scan, preferably from a non-copyrighted source.');
CREATE TABLE IF NOT EXISTS "links_links" (links_links_id INTEGER PRIMARY KEY, person_id INTEGER, place_id INTEGER, nested_place_id INTEGER, place_name_id INTEGER, name_id INTEGER, source_id INTEGER, citation_id INTEGER, finding_id INTEGER, assertion_id INTEGER, project_id INTEGER, to_do_id INTEGER, contact_id INTEGER, image_id INTEGER, note_id INTEGER, role_id INTEGER, repository_id INTEGER, report_id, INTEGER, chart_id INTEGER, media_id INTEGER, role_type_id INTEGER, note_topic_order INTEGER, main_image BOOLEAN, FOREIGN KEY (person_id) REFERENCES person (person_id), FOREIGN KEY (place_id) REFERENCES place (place_id), FOREIGN KEY (nested_place_id) REFERENCES nested_place (nested_place_id), FOREIGN KEY (place_name_id) REFERENCES place_name (place_name_id), FOREIGN KEY (name_id) REFERENCES name (name_id), FOREIGN KEY (source_id) REFERENCES source (source_id), FOREIGN KEY (citation_id) REFERENCES citation (citation_id), FOREIGN KEY (finding_id) REFERENCES finding (finding_id), FOREIGN KEY (assertion_id) REFERENCES assertion (assertion_id), FOREIGN KEY (project_id) REFERENCES project (project_id), FOREIGN KEY (to_do_id) REFERENCES to_do (to_do_id), FOREIGN KEY (contact_id) REFERENCES contact (contact_id), FOREIGN KEY (image_id) REFERENCES image (image_id), FOREIGN KEY (note_id) REFERENCES note (note_id), FOREIGN KEY (role_id) REFERENCES role (role_id), FOREIGN KEY (repository_id) REFERENCES repository (repository_id), FOREIGN KEY (report_id) REFERENCES report (report_id), FOREIGN KEY (chart_id) REFERENCES chart (chart_id), FOREIGN KEY (media_id) REFERENCES media (media_id));
INSERT INTO links_links VALUES(1,NULL,NULL,NULL,NULL,NULL,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,NULL,1,NULL,NULL,NULL,NULL,NULL,NULL,NULL);
DELETE FROM sqlite_sequence;
INSERT INTO sqlite_sequence VALUES('nested_place',1);
COMMIT;
